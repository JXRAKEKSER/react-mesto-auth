[{"/home/dmitriy/WebstormProjects/react-mesto-auth/src/index.js":"1","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/App.js":"2","/home/dmitriy/WebstormProjects/react-mesto-auth/src/contexts/CurrentUserContext.js":"3","/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/apiFunctions.js":"4","/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/Api.js":"5","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Header.jsx":"6","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Main.jsx":"7","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Footer.jsx":"8","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/PopupWithForm.jsx":"9","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/ImagePopup.jsx":"10","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/AddPlacePopup.jsx":"11","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/EditAvatarPopup.jsx":"12","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/EditProfilePopup.jsx":"13","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Card.jsx":"14","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Input.jsx":"15","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/ProtectedComponent.jsx":"16","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Register.jsx":"17","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/SignButton.jsx":"18","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Login.jsx":"19","/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/authApi.js":"20","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/AuthNotificationPopup.jsx":"21","/home/dmitriy/WebstormProjects/react-mesto-auth/src/contexts/AuthContext.js":"22"},{"size":542,"mtime":1639581992592,"results":"23","hashOfConfig":"24"},{"size":8908,"mtime":1639777946146,"results":"25","hashOfConfig":"24"},{"size":88,"mtime":1639355932339,"results":"26","hashOfConfig":"24"},{"size":875,"mtime":1639492220593,"results":"27","hashOfConfig":"24"},{"size":3560,"mtime":1639491706513,"results":"28","hashOfConfig":"24"},{"size":1120,"mtime":1639777986993,"results":"29","hashOfConfig":"24"},{"size":1962,"mtime":1639485309868,"results":"30","hashOfConfig":"24"},{"size":232,"mtime":1638615065255,"results":"31","hashOfConfig":"24"},{"size":763,"mtime":1639486179580,"results":"32","hashOfConfig":"24"},{"size":542,"mtime":1638655429225,"results":"33","hashOfConfig":"24"},{"size":1474,"mtime":1639676541124,"results":"34","hashOfConfig":"24"},{"size":1048,"mtime":1639675688780,"results":"35","hashOfConfig":"24"},{"size":1729,"mtime":1639676671184,"results":"36","hashOfConfig":"24"},{"size":1419,"mtime":1639485298469,"results":"37","hashOfConfig":"24"},{"size":748,"mtime":1639672709447,"results":"38","hashOfConfig":"24"},{"size":520,"mtime":1639777929086,"results":"39","hashOfConfig":"24"},{"size":2204,"mtime":1639778269241,"results":"40","hashOfConfig":"24"},{"size":161,"mtime":1639685206072,"results":"41","hashOfConfig":"24"},{"size":2325,"mtime":1639777810913,"results":"42","hashOfConfig":"24"},{"size":1652,"mtime":1639774309789,"results":"43","hashOfConfig":"24"},{"size":414,"mtime":1639698227997,"results":"44","hashOfConfig":"24"},{"size":81,"mtime":1639760893035,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5605fb",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/dmitriy/WebstormProjects/react-mesto-auth/src/index.js",[],["93","94"],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/App.js",["95"],"import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport {useEffect, useState} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {renderResponse} from \"../utils/apiFunctions\";\nimport {api} from \"../utils/Api\";\nimport * as authApi from '../utils/authApi';\nimport {EditProfilePopup} from \"./EditProfilePopup\";\nimport {EditAvatarPopup} from \"./EditAvatarPopup\";\nimport {AddPlacePopup} from \"./AddPlacePopup\";\nimport {Route, Switch, useHistory} from 'react-router-dom'\nimport {ProtectedComponent} from \"./ProtectedComponent\";\nimport {Register} from \"./Register\";\nimport {Login} from \"./Login\";\nimport {AuthnNotificationPopup} from \"./AuthNotificationPopup\";\nimport successIcon from '../source/images/svg-images/success-icon.svg';\nimport errorIcon from '../source/images/svg-images/error-icon.svg';\nimport {AuthContext} from \"../contexts/AuthContext\";\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({about: '', avatar: '', cohort:'', name:'', _id: '', email: ''});\n\n    // хук для навигации с помощью brouser router\n    const history = useHistory();\n\n    const [editProfileState, setEditProfileState] = useState(false);\n    const [editAvatarState, setEditAvatarState] = useState(false);\n    const [addPlaceState, setAddPlaceState] = useState(false);\n    const [successfulRegState, setSuccessfulRegState] = useState(false);\n    const [errorRegState, setErrorRegState] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [emailNav, setEmailNav] = useState('');\n     function   finallyHandler(){\n        setIsLoading(false);\n    }\n    // стейт карточек\n    const [cards, setCards] = useState([]);\n    useEffect(() => {\n        renderResponse(api.getPreloadsCards(), (data)=>{\n            setCards(data);\n        }, \"#\")\n        renderResponse(api.getUserInfo(), (data) => {\n            setCurrentUser({...currentUser, about: data.about, avatar: data.avatar, cohort: data.cohort, name: data.name, _id: data._id});\n        }, \"#\")\n        if(localStorage.getItem('jwt')){\n            const jwt = localStorage.getItem('jwt');\n            authApi.getUserCredentials(jwt).then( ({email, _id}) => {\n                handleLoggedIn();\n                handleEmailNav(email);\n\n                history.push('/');\n            });\n\n        }\n    }, []);\n\n    // функции обратного вызова для управления поведением карточки\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n        renderResponse(api.changeLikeCardStatus(card._id, !isLiked), newCard => {\n            setCards((prevState) => {\n                return prevState.map( stateItem => {\n                    return stateItem._id === card._id ? newCard : stateItem;\n                });\n            });\n        }, finallyHandler);\n    }\n\n    const handleCardDelete = (card) => {\n\n        renderResponse(api.deleteCard(card._id), () => {\n            setCards(prevState => {\n                return prevState.filter( stateItem => stateItem._id !== card._id)\n            });\n        }, finallyHandler);\n\n    }\n\n    const handleAddMestoCard = ({name, link}) => {\n        setIsLoading(true);\n        renderResponse(api.postCard({name: name, link: link}), newCardData => {\n            setCards([newCardData, ...cards]);\n            setIsLoading(false);\n            closeAllPopups();\n        }, finallyHandler);\n    }\n\n    // функции обратного вызова для управления данными пользователя\n\n    const handleUpdateUser = ({name, about}) => {\n        setIsLoading(true);\n        renderResponse(api.updateUserInfo({fio: name, aboutYourself: about}),data => {\n            setCurrentUser({...currentUser, name: data.name, about: data.about})\n            setIsLoading(false);\n            closeAllPopups();\n        }, finallyHandler);\n\n    }\n\n    const handleUpdateAvatar = ({avatar}) => {\n        setIsLoading(true);\n        renderResponse(api.updateAvatar({avatar}), data => {\n            setCurrentUser({...currentUser, avatar: data.avatar});\n            setIsLoading(false);\n            closeAllPopups();\n        }, finallyHandler);\n    }\n\n    //обработчики для стейта авторизации\n    const handleLoggedIn = () => {\n        setAuthUser({...authUser, isLoggedIn: true});\n    }\n    const handleLoggOut = () => {\n        setAuthUser({...authUser, isLoggedIn: false});\n    }\n    const handleEmailNav = value => {\n        setEmailNav(value)\n    }\n\n    const [authUser, setAuthUser] = useState({isLoggedIn: false, handleLogin: handleLoggedIn, handleQuit: handleLoggOut, handleEmailNav: handleEmailNav});\n\n    // функции обратного вызова для открытия/закрытия попапов\n    const handleEditAvatarClick = () => {\n        setEditAvatarState(true);\n    }\n    const handleEditProfileClick = () => {\n        setEditProfileState(true);\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlaceState(true);\n    }\n    const handleSuccessfullReg = () => {\n        setSuccessfulRegState(true);\n    }\n    const handleErrorReg = () => {\n        setErrorRegState(true);\n    }\n    const closeAllPopups = () => {\n        setEditProfileState(false);\n        setAddPlaceState(false);\n        setEditAvatarState(false);\n        setSuccessfulRegState(false);\n        setErrorRegState(false);\n        setSelectedCard({});\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n\n\n  return (\n      <AuthContext.Provider value={authUser}>\n          <CurrentUserContext.Provider value={currentUser}>\n\n\n              <Switch>\n\n                  <ProtectedComponent component={Main}\n                                      path=\"/\"\n                                      emailNav={emailNav}\n                                      exact={true}\n                                      onEditProfile={handleEditProfileClick}\n                                      onAddPlace={handleAddPlaceClick}\n                                      onEditAvatar={handleEditAvatarClick}\n                                      onCardClick={handleCardClick}\n                                      onCardLike={handleCardLike}\n                                      onCardDelete={handleCardDelete}\n                                      cards={cards} />\n                  <Route path=\"/sign-up\">\n                      <Header />\n                      <Register onSuccessfullReg={handleSuccessfullReg} onErrorReg={handleErrorReg}/>\n                  </Route>\n                  <Route path=\"/sign-in\">\n                      <Header />\n                      <Login onErrorLoggedIn={handleErrorReg} onEmail={handleEmailNav}/>\n                  </Route>\n              </Switch>\n            <Footer />\n              <EditProfilePopup isOpen={editProfileState}\n                                onClose={closeAllPopups}\n                                onUserUpdate={handleUpdateUser}\n                                isLoading={isLoading}/>\n\n              <EditAvatarPopup isOpen={editAvatarState}\n                               onClose={closeAllPopups}\n                               onUpdateAvatar={handleUpdateAvatar}\n                               isLoading={isLoading}/>\n\n              <AddPlacePopup isOpen={addPlaceState}\n                             onClose={closeAllPopups}\n                             onAddCard={handleAddMestoCard}\n                             isLoading={isLoading}/>\n\n              <PopupWithForm name={\"confirm\"} title={\"Вы уверены?\"}/>\n\n              <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n              <AuthnNotificationPopup name=\"success-register\" isOpen={successfulRegState} onClose={closeAllPopups}>\n                  <img className=\"popup__reg-icon\" src={successIcon} alt=\"Иконка успешной регистрации\"/>\n                  <h2 className=\"popup__title popup__title_color_black popup__title_type_notification\">Вы успешно зарегестрировались!</h2>\n              </AuthnNotificationPopup>\n              <AuthnNotificationPopup name=\"error-register\" isOpen={errorRegState} onClose={closeAllPopups}>\n                  <img className=\"popup__reg-icon\" src={errorIcon} alt=\"Иконка неуспешной регистрации\"/>\n                  <h2 className=\"popup__title popup__title_color_black popup__title_type_notification\">Что-то пошло не так! Попробуйте ещё раз.</h2>\n              </AuthnNotificationPopup>\n\n          </CurrentUserContext.Provider>\n      </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","/home/dmitriy/WebstormProjects/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/apiFunctions.js",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/Api.js",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Header.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Main.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Footer.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/PopupWithForm.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/ImagePopup.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/AddPlacePopup.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/EditAvatarPopup.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/EditProfilePopup.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Card.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Input.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/ProtectedComponent.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Register.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/SignButton.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Login.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/authApi.js",["96"],"const baseURL = 'https://auth.nomoreparties.co';\n\nexport const authentication = ({password, email}) => {\n    return fetch(`${baseURL}/signup`, {\n        method: \"POST\",\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then( response => {\n            if(response.ok){\n                return response.json();\n            }\n           return  Promise.reject(response.status);\n        })\n        .then( data => {\n            return data;\n        })\n}\nexport const login = ({password, email}) => {\n    return fetch(`${baseURL}/signin`, {\n        method: \"POST\",\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then( response => {\n            if(response.ok){\n                return response.json();\n            }\n            return  Promise.reject(response.status);\n        })\n        .then( data => {\n            if(data.token){\n                localStorage.setItem('jwt', data.token);\n                return data;\n            }else {\n                return;\n            }\n            return data;\n        })\n}\n\nexport const getUserCredentials = (jwt) => {\n    return fetch(`${baseURL}/users/me`, {\n        method: 'GET',\n        headers:{\n        \"Content-Type\": \"application/json\",\n        \"Authorization\" : `Bearer ${jwt}`\n        }\n    }).then( response => {\n        if(response.ok){\n            return response.json();\n        }\n        return  Promise.reject(response.status);\n    }).then(({data}) => {\n\n        return data\n    });\n}\n/*\ndodiknevova dodik@gmail.com*/\n","/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/AuthNotificationPopup.jsx",[],"/home/dmitriy/WebstormProjects/react-mesto-auth/src/contexts/AuthContext.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":60,"column":8,"nodeType":"103","endLine":60,"endColumn":10,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":42,"column":13,"nodeType":"107","messageId":"108","endLine":42,"endColumn":25},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'handleLoggedIn', and 'history'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentUser(c => ...)' if you only need 'currentUser' in the 'setCurrentUser' call.","ArrayExpression",["111"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [currentUser, handleLoggedIn, history]",{"range":"114","text":"115"},[2502,2504],"[currentUser, handleLoggedIn, history]"]