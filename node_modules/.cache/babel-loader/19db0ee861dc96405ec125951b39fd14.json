{"ast":null,"code":"const baseURL = 'https://auth.nomoreparties.co';\nexport const authentication = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  return fetch(`${baseURL}/signup`, {\n    method: \"POST\",\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response.status);\n  }).then(data => {\n    return data;\n  });\n};\nexport const login = _ref2 => {\n  let {\n    password,\n    email\n  } = _ref2;\n  return fetch(`${baseURL}/signin`, {\n    method: \"POST\",\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response.status);\n  }).then(data => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    } else {\n      return;\n    }\n\n    return data;\n  });\n};\nexport const getUserCredentials = jwt => {\n  return fetch(`${baseURL}/users/me`, {\n    method: 'GET',\n    headers: {}\n  });\n};\n/*\ndodiknevova dodik@gmail.com*/","map":{"version":3,"sources":["/home/dmitriy/WebstormProjects/react-mesto-auth/src/utils/authApi.js"],"names":["baseURL","authentication","password","email","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Promise","reject","status","data","login","token","localStorage","setItem","getUserCredentials","jwt"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+BAAhB;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAuB;AAAA,MAAtB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAsB;AACjD,SAAOC,KAAK,CAAE,GAAEJ,OAAQ,SAAZ,EAAsB;AAC9BK,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ,KAFsB;AAK9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AALwB,GAAtB,CAAL,CAOFO,IAPE,CAOIC,QAAQ,IAAI;AACf,QAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACF,WAAQC,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACK,MAAxB,CAAR;AACF,GAZE,EAaFN,IAbE,CAaIO,IAAI,IAAI;AACX,WAAOA,IAAP;AACH,GAfE,CAAP;AAgBH,CAjBM;AAkBP,OAAO,MAAMC,KAAK,GAAG,SAAuB;AAAA,MAAtB;AAAChB,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAsB;AACxC,SAAOC,KAAK,CAAE,GAAEJ,OAAQ,SAAZ,EAAsB;AAC9BK,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ,KAFsB;AAK9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AALwB,GAAtB,CAAL,CAOFO,IAPE,CAOIC,QAAQ,IAAI;AACf,QAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,WAAQC,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACK,MAAxB,CAAR;AACH,GAZE,EAaFN,IAbE,CAaIO,IAAI,IAAI;AACX,QAAGA,IAAI,CAACE,KAAR,EAAc;AACVC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BJ,IAAI,CAACE,KAAjC;AACA,aAAOF,IAAP;AACH,KAHD,MAGM;AACF;AACH;;AACD,WAAOA,IAAP;AACH,GArBE,CAAP;AAsBH,CAvBM;AAyBP,OAAO,MAAMK,kBAAkB,GAAIC,GAAD,IAAS;AACvC,SAAOnB,KAAK,CAAE,GAAEJ,OAAQ,WAAZ,EAAwB;AAChCK,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,OAAO,EAAC;AAFwB,GAAxB,CAAZ;AAMH,CAPM;AAQP;AACA","sourcesContent":["const baseURL = 'https://auth.nomoreparties.co';\n\nexport const authentication = ({password, email}) => {\n    return fetch(`${baseURL}/signup`, {\n        method: \"POST\",\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then( response => {\n            if(response.ok){\n                return response.json();\n            }\n           return  Promise.reject(response.status);\n        })\n        .then( data => {\n            return data;\n        })\n}\nexport const login = ({password, email}) => {\n    return fetch(`${baseURL}/signin`, {\n        method: \"POST\",\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then( response => {\n            if(response.ok){\n                return response.json();\n            }\n            return  Promise.reject(response.status);\n        })\n        .then( data => {\n            if(data.token){\n                localStorage.setItem('jwt', data.token);\n                return data;\n            }else {\n                return;\n            }\n            return data;\n        })\n}\n\nexport const getUserCredentials = (jwt) => {\n    return fetch(`${baseURL}/users/me`, {\n        method: 'GET',\n        headers:{\n            \n        }\n    })\n}\n/*\ndodiknevova dodik@gmail.com*/\n"]},"metadata":{},"sourceType":"module"}