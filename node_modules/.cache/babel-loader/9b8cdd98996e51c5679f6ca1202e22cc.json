{"ast":null,"code":"var _jsxFileName = \"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Input } from \"./Input\";\nimport { SignButton } from \"./SignButton\";\nimport * as authApi from '../utils/authApi';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = _ref => {\n  _s();\n\n  let {\n    onLoggedIn,\n    onErrorLoggedIn\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const [formState, setFormState] = useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n\n  const handleChange = evt => {\n    const {\n      value,\n      name\n    } = evt.target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    authApi.login(formState).then(data => {\n      if (data.token) {\n        onLoggedIn({ ...currentUser,\n          isLoggedIn: true\n        });\n        history.push('/');\n      }\n    }).catch(() => {\n      onErrorLoggedIn();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login page__login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login__title\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login__form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: formState['email'],\n          id: \"login-email\",\n          name: \"email\",\n          maxLength: \"24\",\n          minLength: \"6\",\n          onChangeHandler: handleChange,\n          type: \"text\",\n          styleModifier: \"login__input\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: formState['password'],\n          id: \"login-password\",\n          name: \"password\",\n          maxLength: \"24\",\n          minLength: \"6\",\n          onChangeHandler: handleChange,\n          type: \"password\",\n          styleModifier: \"login__input\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SignButton, {\n          value: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"vT6Vj1HmhH/Elr0y0sRUPPm+SfA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/Login.jsx"],"names":["React","useContext","useState","Input","SignButton","authApi","CurrentUserContext","useHistory","Login","onLoggedIn","onErrorLoggedIn","currentUser","formState","setFormState","email","password","history","handleChange","evt","value","name","target","handleSubmit","preventDefault","login","then","data","token","isLoggedIn","push","catch"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport {Input} from \"./Input\";\nimport {SignButton} from \"./SignButton\";\nimport * as authApi from '../utils/authApi';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {useHistory} from \"react-router-dom\";\nexport const Login = ({onLoggedIn, onErrorLoggedIn}) => {\n    const currentUser = useContext(CurrentUserContext);\n    const [formState, setFormState] = useState({email: '', password: ''});\n    const history = useHistory();\n\n    const handleChange = (evt) => {\n        const {value, name} = evt.target;\n        setFormState({...formState, [name]: value});\n    }\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        authApi.login(formState).then(data => {\n            if(data.token){\n                onLoggedIn({...currentUser, isLoggedIn: true});\n                history.push('/');\n            }\n        }).catch(() => {\n            onErrorLoggedIn();\n        })\n    }\n    return(\n        <main className=\"content\">\n            <section className=\"login page__login\">\n                <h2 className=\"login__title\">Вход</h2>\n                <form className=\"login__form\" onSubmit={handleSubmit}>\n                    <Input value={formState['email']}\n                           id=\"login-email\"\n                           name=\"email\"\n                           maxLength=\"24\"\n                           minLength=\"6\"\n                           onChangeHandler={handleChange}\n                           type=\"text\"\n                           styleModifier=\"login__input\"\n                           placeholder=\"Email\"\n                    />\n                    <Input value={formState['password']}\n                           id=\"login-password\"\n                           name=\"password\"\n                           maxLength=\"24\"\n                           minLength=\"6\"\n                           onChangeHandler={handleChange}\n                           type=\"password\"\n                           styleModifier=\"login__input\"\n                           placeholder=\"Пароль\"\n                    />\n                    <SignButton value=\"Войти\" />\n                </form>\n            </section>\n        </main>\n    );\n}"]},"metadata":{},"sourceType":"module"}