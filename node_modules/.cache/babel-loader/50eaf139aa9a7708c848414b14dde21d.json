{"ast":null,"code":"var _jsxFileName = \"/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport { useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { renderResponse } from \"../utils/apiFunctions\";\nimport { api } from \"../utils/Api\";\nimport { EditProfilePopup } from \"./EditProfilePopup\";\nimport { EditAvatarPopup } from \"./EditAvatarPopup\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\nimport { Route, Switch } from 'react-router-dom';\nimport { ProtectedComponent } from \"./ProtectedComponent\";\nimport { Register } from \"./Register\";\nimport { Login } from \"./Login\";\nimport { AuthnNotificationPopup } from \"./AuthNotificationPopup\";\nimport successIcon from \"../source/images/svg-images/success-icon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    about: '',\n    avatar: '',\n    cohort: '',\n    name: '',\n    _id: '',\n    isLoggedIn: false\n  }); // стейт для определения метоположения в приложении\n\n  useEffect(() => {\n    renderResponse(api.getUserInfo(), data => {\n      setCurrentUser({ ...currentUser,\n        about: data.about,\n        avatar: data.avatar,\n        cohort: data.cohort,\n        name: data.name,\n        _id: data._id\n      });\n    }, \"#\");\n  }, []);\n  const [editProfileState, setEditProfileState] = useState(false);\n  const [editAvatarState, setEditAvatarState] = useState(false);\n  const [addPlaceState, setAddPlaceState] = useState(false);\n  const [successfulReg, setSuccessfulReg] = useState(true);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  function finallyHandler() {\n    setIsLoading(false);\n  } // стейт карточек\n\n\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    renderResponse(api.getPreloadsCards(), data => {\n      setCards(data);\n    }, \"#\");\n  }, []); // функции обратного вызова для управления поведением карточки\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    renderResponse(api.changeLikeCardStatus(card._id, !isLiked), newCard => {\n      setCards(prevState => {\n        return prevState.map(stateItem => {\n          return stateItem._id === card._id ? newCard : stateItem;\n        });\n      });\n    }, finallyHandler);\n  };\n\n  const handleCardDelete = card => {\n    renderResponse(api.deleteCard(card._id), () => {\n      setCards(prevState => {\n        return prevState.filter(stateItem => stateItem._id !== card._id);\n      });\n    }, finallyHandler);\n  };\n\n  const handleAddMestoCard = _ref => {\n    let {\n      name,\n      link\n    } = _ref;\n    setIsLoading(true);\n    renderResponse(api.postCard({\n      name: name,\n      link: link\n    }), newCardData => {\n      setCards([newCardData, ...cards]);\n      setIsLoading(false);\n      closeAllPopups();\n    }, finallyHandler);\n  }; // функции обратного вызова для управления данными пользователя\n\n\n  const handleUpdateUser = _ref2 => {\n    let {\n      name,\n      about\n    } = _ref2;\n    setIsLoading(true);\n    renderResponse(api.updateUserInfo({\n      fio: name,\n      aboutYourself: about\n    }), data => {\n      setCurrentUser({ ...currentUser,\n        name: data.name,\n        about: data.about\n      });\n      setIsLoading(false);\n      closeAllPopups();\n    }, finallyHandler);\n  };\n\n  const handleUpdateAvatar = _ref3 => {\n    let {\n      avatar\n    } = _ref3;\n    setIsLoading(true);\n    renderResponse(api.updateAvatar({\n      avatar\n    }), data => {\n      setCurrentUser({ ...currentUser,\n        avatar: data.avatar\n      });\n      setIsLoading(false);\n      closeAllPopups();\n    }, finallyHandler);\n  }; // функции обратного вызова для окткрытия/закрытия попапов\n\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarState(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfileState(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlaceState(true);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfileState(false);\n    setAddPlaceState(false);\n    setEditAvatarState(false);\n    setSelectedCard({});\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedComponent, {\n        component: Main,\n        path: \"/\",\n        exact: true,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: editProfileState,\n      onClose: closeAllPopups,\n      onUserUpdate: handleUpdateUser,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: editAvatarState,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: addPlaceState,\n      onClose: closeAllPopups,\n      onAddCard: handleAddMestoCard,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"confirm\",\n      title: \"Вы уверены?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AuthnNotificationPopup, {\n      name: \"success-register\",\n      isOpen: successfulReg,\n      onClose: closeAllPopups,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__success-icon\",\n        src: successIcon,\n        alt: \"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E\\u0439 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title popup__title_color_black\",\n        children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"0RtKRTNLjxnYw6H6S1JzHlMksQg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dmitriy/WebstormProjects/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","useEffect","useState","CurrentUserContext","renderResponse","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Route","Switch","ProtectedComponent","Register","Login","AuthnNotificationPopup","App","currentUser","setCurrentUser","about","avatar","cohort","name","_id","isLoggedIn","getUserInfo","data","editProfileState","setEditProfileState","editAvatarState","setEditAvatarState","addPlaceState","setAddPlaceState","successfulReg","setSuccessfulReg","selectedCard","setSelectedCard","isLoading","setIsLoading","finallyHandler","cards","setCards","getPreloadsCards","handleCardLike","card","isLiked","likes","some","like","changeLikeCardStatus","newCard","prevState","map","stateItem","handleCardDelete","deleteCard","filter","handleAddMestoCard","link","postCard","newCardData","closeAllPopups","handleUpdateUser","updateUserInfo","fio","aboutYourself","handleUpdateAvatar","updateAvatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","successIcon"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport {useEffect, useState} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {renderResponse} from \"../utils/apiFunctions\";\nimport {api} from \"../utils/Api\";\nimport {EditProfilePopup} from \"./EditProfilePopup\";\nimport {EditAvatarPopup} from \"./EditAvatarPopup\";\nimport {AddPlacePopup} from \"./AddPlacePopup\";\nimport {Route, Switch} from 'react-router-dom'\nimport {ProtectedComponent} from \"./ProtectedComponent\";\nimport {Register} from \"./Register\";\nimport {Login} from \"./Login\";\nimport {AuthnNotificationPopup} from \"./AuthNotificationPopup\";\nimport successIcon from '../source/images/svg-images/success-icon.svg';\n\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({about: '', avatar: '', cohort:'', name:'', _id: '', isLoggedIn: false});\n\n    // стейт для определения метоположения в приложении\n\n    useEffect(() => {\n        renderResponse(api.getUserInfo(), (data) => {\n            setCurrentUser({...currentUser, about: data.about, avatar: data.avatar, cohort: data.cohort, name: data.name, _id: data._id});\n        }, \"#\")\n    }, []);\n    const [editProfileState, setEditProfileState] = useState(false);\n    const [editAvatarState, setEditAvatarState] = useState(false);\n    const [addPlaceState, setAddPlaceState] = useState(false);\n    const [successfulReg, setSuccessfulReg] = useState(true);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n     function   finallyHandler(){\n        setIsLoading(false);\n    }\n    // стейт карточек\n    const [cards, setCards] = useState([]);\n    useEffect(() => {\n        renderResponse(api.getPreloadsCards(), (data)=>{\n            setCards(data);\n        }, \"#\")\n    }, []);\n    // функции обратного вызова для управления поведением карточки\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n        renderResponse(api.changeLikeCardStatus(card._id, !isLiked), newCard => {\n            setCards((prevState) => {\n                return prevState.map( stateItem => {\n                    return stateItem._id === card._id ? newCard : stateItem;\n                });\n            });\n        }, finallyHandler);\n    }\n\n    const handleCardDelete = (card) => {\n\n        renderResponse(api.deleteCard(card._id), () => {\n            setCards(prevState => {\n                return prevState.filter( stateItem => stateItem._id !== card._id)\n            });\n        }, finallyHandler);\n\n    }\n\n    const handleAddMestoCard = ({name, link}) => {\n        setIsLoading(true);\n        renderResponse(api.postCard({name: name, link: link}), newCardData => {\n            setCards([newCardData, ...cards]);\n            setIsLoading(false);\n            closeAllPopups();\n        }, finallyHandler);\n    }\n\n    // функции обратного вызова для управления данными пользователя\n\n    const handleUpdateUser = ({name, about}) => {\n        setIsLoading(true);\n        renderResponse(api.updateUserInfo({fio: name, aboutYourself: about}),data => {\n            setCurrentUser({...currentUser, name: data.name, about: data.about})\n            setIsLoading(false);\n            closeAllPopups();\n        }, finallyHandler);\n\n    }\n\n    const handleUpdateAvatar = ({avatar}) => {\n        setIsLoading(true);\n        renderResponse(api.updateAvatar({avatar}), data => {\n            setCurrentUser({...currentUser, avatar: data.avatar});\n            setIsLoading(false);\n            closeAllPopups();\n        }, finallyHandler);\n    }\n\n\n    // функции обратного вызова для окткрытия/закрытия попапов\n    const handleEditAvatarClick = () => {\n        setEditAvatarState(true);\n    }\n    const handleEditProfileClick = () => {\n        setEditProfileState(true);\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlaceState(true);\n    }\n    const closeAllPopups = () => {\n        setEditProfileState(false);\n        setAddPlaceState(false);\n        setEditAvatarState(false)\n        setSelectedCard({});\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n\n\n          <Switch>\n\n              <ProtectedComponent component={Main}\n                                  path=\"/\"\n                                  exact={true}\n                                  onEditProfile={handleEditProfileClick}\n                                  onAddPlace={handleAddPlaceClick}\n                                  onEditAvatar={handleEditAvatarClick}\n                                  onCardClick={handleCardClick}\n                                  onCardLike={handleCardLike}\n                                  onCardDelete={handleCardDelete}\n                                  cards={cards} />\n              <Route path=\"/sign-up\">\n                  <Header />\n                  <Register />\n              </Route>\n              <Route path=\"/sign-in\">\n                  <Header />\n                  <Login />\n              </Route>\n          </Switch>\n        <Footer />\n          <EditProfilePopup isOpen={editProfileState}\n                            onClose={closeAllPopups}\n                            onUserUpdate={handleUpdateUser}\n                            isLoading={isLoading}/>\n\n          <EditAvatarPopup isOpen={editAvatarState}\n                           onClose={closeAllPopups}\n                           onUpdateAvatar={handleUpdateAvatar}\n                           isLoading={isLoading}/>\n\n          <AddPlacePopup isOpen={addPlaceState}\n                         onClose={closeAllPopups}\n                         onAddCard={handleAddMestoCard}\n                         isLoading={isLoading}/>\n\n          <PopupWithForm name={\"confirm\"} title={\"Вы уверены?\"}/>\n\n          <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n          <AuthnNotificationPopup name=\"success-register\" isOpen={successfulReg} onClose={closeAllPopups}>\n              <img className=\"popup__success-icon\" src={successIcon} alt=\"Иконка успешной регистрации\"/>\n              <h2 className=\"popup__title popup__title_color_black\">Вы успешно зарегестрировались!</h2>\n          </AuthnNotificationPopup>\n\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}